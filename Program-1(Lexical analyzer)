#include <stdio.h>
#include <ctype.h>
#include <string.h>
#define MAX_LEN 30   // maximum identifier length
// Function to check if a character is an operator
int isOperator(char c) {
    char operators[] = "+-*/=%<>&|!";
    for (int i = 0; operators[i] != '\0'; i++) {
        if (c == operators[i]) return 1;
    }
    return 0;
}
// Function to check if a string is a valid identifier
int isIdentifier(char *str) {
    if (!isalpha(str[0]) && str[0] != '_')
        return 0;
    for (int i = 1; str[i] != '\0'; i++) {
        if (!isalnum(str[i]) && str[i] != '_')
            return 0;
    }
    return 1;
}
int main() {
    FILE *fp;
    char c;
    char buffer[100];
    int i = 0;
    fp = fopen("input.c", "r");  // input file to analyze
    if (fp == NULL) {
        printf("Cannot open file!\n");
        return 0;
    }
    while ((c = fgetc(fp)) != EOF) {
        // Ignore whitespace
        if (c == ' ' || c == '\t' || c == '\n') continue;
        // Ignore single-line comments
        if (c == '/' && (c = fgetc(fp)) == '/') {
            while ((c = fgetc(fp)) != '\n' && c != EOF);
            continue;
        }
        // Ignore multi-line comments
        if (c == '*' && buffer[0] == '/') {
            while ((c = fgetc(fp)) != EOF) {
                if (c == '*' && (c = fgetc(fp)) == '/') break;
            }
            continue;
        }
        // If identifier or keyword
        if (isalpha(c) || c == '_') {
            i = 0;
            buffer[i++] = c;
            while (isalnum(c = fgetc(fp)) || c == '_') {
                if (i < MAX_LEN - 1) buffer[i++] = c; // restrict identifier length
            }
            buffer[i] = '\0';
            printf("Identifier: %s\n", buffer);
            ungetc(c, fp); // put back the extra character
        }
        // If number (constant)
        else if (isdigit(c)) {
            i = 0;
            buffer[i++] = c;
            while (isdigit(c = fgetc(fp))) {
                buffer[i++] = c;
            }
            buffer[i] = '\0';
            printf("Constant: %s\n", buffer);
            ungetc(c, fp);
        }
        // If operator
        else if (isOperator(c)) {
            printf("Operator: %c\n", c);
        }
        // If special symbol
        else {
            printf("Special Symbol: %c\n", c);
        }
    }
    fclose(fp);
    return 0;
}
