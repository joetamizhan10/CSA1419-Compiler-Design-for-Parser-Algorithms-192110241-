#include <stdio.h>
#include <string.h>

// Structure for TAC instruction
struct TAC {
    char result[10];
    char arg1[10];
    char op[5];
    char arg2[10];
};

int main() {
    int n, i;
    struct TAC code[20];

    printf("Enter number of TAC statements: ");
    scanf("%d", &n);

    printf("Enter TAC in format: result arg1 operator arg2\n");
    printf("Example: t1 a + b\n\n");

    for (i = 0; i < n; i++) {
        scanf("%s %s %s %s", code[i].result, code[i].arg1, code[i].op, code[i].arg2);
    }

    printf("\n--- Generated Assembly Code ---\n");
    for (i = 0; i < n; i++) {
        printf("MOV R1, %s\n", code[i].arg1);

        if (strcmp(code[i].op, "+") == 0)
            printf("ADD R1, %s\n", code[i].arg2);
        else if (strcmp(code[i].op, "-") == 0)
            printf("SUB R1, %s\n", code[i].arg2);
        else if (strcmp(code[i].op, "*") == 0)
            printf("MUL R1, %s\n", code[i].arg2);
        else if (strcmp(code[i].op, "/") == 0)
            printf("DIV R1, %s\n", code[i].arg2);

        printf("MOV %s, R1\n\n", code[i].result);
    }
    return 0;
}
