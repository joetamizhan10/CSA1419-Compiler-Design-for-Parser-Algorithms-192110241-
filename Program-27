%{
#include <stdio.h>
#include <string.h>

int lineno = 1;
%}

%%
"#include"[^\n]*     { printf("Preprocessor Directive: %s\n", yytext); }

"int"                { printf("Keyword: %s\n", yytext); }
"void"               { printf("Keyword: %s\n", yytext); }
"main"               { printf("Keyword: %s\n", yytext); }
"printf"             { printf("Keyword: %s\n", yytext); }
"return"             { printf("Keyword: %s\n", yytext); }

[0-9]+               { printf("Number: %s\n", yytext); }

\"[^\"]*\"           { printf("String Literal: %s\n", yytext); }

[a-zA-Z_][a-zA-Z0-9_]* { printf("Identifier: %s\n", yytext); }

"="                  { printf("Operator: %s\n", yytext); }
","                  { printf("Operator: %s\n", yytext); }
";"                  { printf("Operator: %s\n", yytext); }
"("                  { printf("Special Symbol: %s\n", yytext); }
")"                  { printf("Special Symbol: %s\n", yytext); }
"{"                  { printf("Special Symbol: %s\n", yytext); }
"}"                  { printf("Special Symbol: %s\n", yytext); }

[ \t]                ;   /* Ignore whitespace */
\n                   { lineno++; }

.                    { printf("Unknown token: %s\n", yytext); }
%%

int main()
{
    printf("Lexical Analysis Started...\n\n");
    yylex();
    printf("\nLexical Analysis Completed. Total lines: %d\n", lineno);
    return 0;
}

int yywrap()
{
    return 1;
}
